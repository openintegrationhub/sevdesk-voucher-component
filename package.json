{
    "version": "2.0.0",
    "main": "component.json",
    "dependencies": {
        "@openintegrationhub/ferryman": "1.6.2",
        "swagger-client": "^3.8.22"
    },
    "devDependencies": {
        "eslint": "7.26.0",
        "eslint-config-airbnb-base": "13.1.0",
        "eslint-plugin-import": "2.14.0",
        "eslint-plugin-jest": "22.1.0",
        "eslint-plugin-json": "1.4.0",
        "eslint-plugin-mocha": "5.2.0"
    },
    "author": {
        "name": "Open Integration Hub"
    },
    "license": "Apache-2.0",
    "name": "sevdesk-voucher-component",
    "description": "\r\n# General information\r\nWelcome to our Receipt API!<br>\r\nYou can use it to manage receipts (vouchers) in your sevDesk account.\r\n\r\n# Cross-Origin Resource Sharing\r\nThis API features Cross-Origin Resource Sharing (CORS).<br>\r\nIt enables cross-domain communication from the browser.<br>\r\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\r\n\r\n# Embedding resources\r\nWhen retrieving resources by using this API, you might encounter nested resources in the resources you requested.<br>\r\nFor example, an invoice always contains a contact, of which you can see the ID and the object name.<br>\r\nThis API gives you the possibility to embed these resources completely into the resources you originally requested.<br>\r\nTaking our invoice example, this would mean, that you would not only see the ID and object name of a contact, but rather the complete contact resource.\r\n\r\nTo embed resources, all you need to do is to add the query parameter 'embed' to your GET request.<br>\r\nAs values, you can provide the name of the nested resource.<br>\r\nMultiple nested resources are also possible by providing multiple names, separated by a comma.\r\n",
    "scripts": {
        "start": "node ./node_modules/@openintegrationhub/ferryman/runGlobal.js",
        "pretest": "eslint lib test --ext .js --ext .json --fix",
        "test": "NODE_ENV=test mocha test/* --timeout 10000",
        "test-watch": "nodemon --exec \"npm test \" ",
        "lint": "eslint --fix 'lib/**/*.js'"
    }
}